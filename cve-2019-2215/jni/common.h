#ifndef _COMMON_H_
#define _COMMON_H_

//#define CONFIG_ARCH_ARM32
#define CONFIG_ARCH_ARM64
//#define CONFIG_ARCH_X86_64
//#define CONFIG_THREAD_INFO_IN_TASK
#define CONFIG_EXPLOIT_ROOT
//#define CONFIG_BYPASS_PAN


#define ONE_PAGE_SIZE   0x1000

typedef signed long long s64;
typedef unsigned char u8;
typedef unsigned int u32;

#define CMP_MIN(x, y) ((x) < (y) ? (x) : (y))
#define CMP_MAX(x, y) ((x) > (y) ? (x) : (y))
#define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

int kernel_read(void *src, void *dst, int len);
int kernel_write(void *dst, void *src, int len);
unsigned long kernel_read_ulong(void* kaddr);
unsigned int kernel_read_uint(void* kaddr);
void kernel_write_ulong(void* kaddr, unsigned long data);
void kernel_write_uint(void* kaddr, unsigned int data);

extern void error(char* fmt, ...);
extern void show_bytes(void *buffer, int len);
void show_data_byint(void *buffer, int len);
void hexdump_memory(unsigned char *buf, size_t byte_count);
int write_buf_to_file(void *buf, int len);
int read_file_to_buf(void *buf, int len);

extern pid_t gettid(void);
extern int get_name_by_pid(pid_t pid, char *task_name);
extern int set_fd_limit(void);
extern int set_process_priority(int prio);
extern int get_process_priority(void);
extern int bind_cpu(int num);
extern int get_mem_info(const char *key, unsigned long *value);
extern int get_kernel_info(char *buf);
extern int get_kernel_version(void);

#endif
